{
  "problem": {
    "title": "Summary Ranges",
    "leetcode_id": null,
    "category": "String/Array/Matrix",
    "description": "You are given a sorted unique integer array nums.",
    "assumptions": [],
    "example": {}
  },
  "solutions": [
    {
      "title": "Solution 1 – Linear Scan",
      "description": "Scan array and group consecutive numbers.",
      "code": "public List summaryRanges(int[] nums) {\n    List result = new ArrayList<>();\n    if (nums == null || nums.length == 0) return result;\n    \n    int start = nums[0];\n    int end = nums[0];\n    \n    for (int i = 1; i < nums.length; i++) {\n        if (nums[i] == end + 1) {\n            end = nums[i];\n        } else {\n            result.add(formatRange(start, end));\n            start = end = nums[i];\n        }\n    }\n    \n    result.add(formatRange(start, end));\n    return result;\n}\n\nprivate String formatRange(int start, int end) {\n    return start == end ? String.valueOf(start) : start + \"->\" + end;\n}",
      "language": "java",
      "complexity": {
        "time": "O(n)",
        "space": "O(1)"
      }
    },
    {
      "title": "Solution 1 – Linear Scan",
      "description": "Scan array and group consecutive numbers.",
      "code": "public List summaryRanges(int[] nums) {\n    List result = new ArrayList<>();\n    if (nums == null || nums.length == 0) return result;\n    \n    int start = nums[0];\n    int end = nums[0];\n    \n    for (int i = 1; i < nums.length; i++) {\n        if (nums[i] == end + 1) {\n            end = nums[i];\n        } else {\n            result.add(formatRange(start, end));\n            start = end = nums[i];\n        }\n    }\n    \n    result.add(formatRange(start, end));\n    return result;\n}\n\nprivate String formatRange(int start, int end) {\n    return start == end ? String.valueOf(start) : start + \"->\" + end;\n}",
      "language": "java",
      "complexity": {
        "time": "O(n)",
        "space": "O(1)"
      }
    }
  ],
  "variations": [],
  "navigation": {}
}