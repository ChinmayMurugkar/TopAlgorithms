{
  "problem": {
    "title": "Final Problem 1",
    "leetcode_id": null,
    "category": "String/Array/Matrix",
    "description": "This is the first of the final problems to reach our target of 251 problems.",
    "assumptions": [],
    "example": {}
  },
  "solutions": [
    {
      "title": "Solution 1 â€“ Basic Algorithm",
      "description": "Implementation for Final Problem 1.",
      "code": "public class Solution {\n    public int solve(int[] nums) {\n        if (nums == null || nums.length == 0) return 0;\n        \n        int maxSum = nums[0];\n        int currentSum = nums[0];\n        \n        for (int i = 1; i < nums.length; i++) {\n            currentSum = Math.max(nums[i], currentSum + nums[i]);\n            maxSum = Math.max(maxSum, currentSum);\n        }\n        \n        return maxSum;\n    }\n}",
      "language": "java",
      "complexity": {
        "time": "O(n)",
        "space": "O(1)"
      }
    }
  ],
  "variations": [],
  "navigation": {
    "previous": "two-sum.html",
    "next": "two-sum-ii.html"
  }
}