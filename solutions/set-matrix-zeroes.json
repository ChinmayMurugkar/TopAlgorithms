{
  "problem": {
    "title": "Set Matrix Zeroes",
    "leetcode_id": 73,
    "category": "Matrix",
    "description": "Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.",
    "assumptions": [],
    "example": {}
  },
  "solutions": [
    {
      "title": "Solution 1 – Use First Row/Column as Markers",
      "description": "Use the first row and column as markers to avoid extra space.",
      "code": "public void setZeroes(int[][] matrix) {\n    int m = matrix.length;\n    int n = matrix[0].length;\n    boolean firstRowHasZero = false;\n    boolean firstColHasZero = false;\n    \n    // Check if first row has zero\n    for (int j = 0; j < n; j++) {\n        if (matrix[0][j] == 0) {\n            firstRowHasZero = true;\n            break;\n        }\n    }\n    \n    // Check if first column has zero\n    for (int i = 0; i < m; i++) {\n        if (matrix[i][0] == 0) {\n            firstColHasZero = true;\n            break;\n        }\n    }\n    \n    // Use first row and column as markers\n    for (int i = 1; i < m; i++) {\n        for (int j = 1; j < n; j++) {\n            if (matrix[i][j] == 0) {\n                matrix[i][0] = 0;\n                matrix[0][j] = 0;\n            }\n        }\n    }\n    \n    // Set zeros based on markers\n    for (int i = 1; i < m; i++) {\n        for (int j = 1; j < n; j++) {\n            if (matrix[i][0] == 0 || matrix[0][j] == 0) {\n                matrix[i][j] = 0;\n            }\n        }\n    }\n    \n    // Set first row to zero if needed\n    if (firstRowHasZero) {\n        for (int j = 0; j < n; j++) {\n            matrix[0][j] = 0;\n        }\n    }\n    \n    // Set first column to zero if needed\n    if (firstColHasZero) {\n        for (int i = 0; i < m; i++) {\n            matrix[i][0] = 0;\n        }\n    }\n}",
      "language": "java",
      "complexity": {
        "time": "O(m×n)",
        "space": "O(1)"
      }
    },
    {
      "title": "Solution 1 – Use First Row/Column as Markers",
      "description": "Use the first row and column as markers to avoid extra space.",
      "code": "public void setZeroes(int[][] matrix) {\n    int m = matrix.length;\n    int n = matrix[0].length;\n    boolean firstRowHasZero = false;\n    boolean firstColHasZero = false;\n    \n    // Check if first row has zero\n    for (int j = 0; j < n; j++) {\n        if (matrix[0][j] == 0) {\n            firstRowHasZero = true;\n            break;\n        }\n    }\n    \n    // Check if first column has zero\n    for (int i = 0; i < m; i++) {\n        if (matrix[i][0] == 0) {\n            firstColHasZero = true;\n            break;\n        }\n    }\n    \n    // Use first row and column as markers\n    for (int i = 1; i < m; i++) {\n        for (int j = 1; j < n; j++) {\n            if (matrix[i][j] == 0) {\n                matrix[i][0] = 0;\n                matrix[0][j] = 0;\n            }\n        }\n    }\n    \n    // Set zeros based on markers\n    for (int i = 1; i < m; i++) {\n        for (int j = 1; j < n; j++) {\n            if (matrix[i][0] == 0 || matrix[0][j] == 0) {\n                matrix[i][j] = 0;\n            }\n        }\n    }\n    \n    // Set first row to zero if needed\n    if (firstRowHasZero) {\n        for (int j = 0; j < n; j++) {\n            matrix[0][j] = 0;\n        }\n    }\n    \n    // Set first column to zero if needed\n    if (firstColHasZero) {\n        for (int i = 0; i < m; i++) {\n            matrix[i][0] = 0;\n        }\n    }\n}",
      "language": "java",
      "complexity": {
        "time": "O(m×n)",
        "space": "O(1)"
      }
    }
  ],
  "variations": [],
  "navigation": {}
}