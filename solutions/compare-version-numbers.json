{
  "problem": {
    "title": "Compare Version Numbers",
    "leetcode_id": null,
    "category": "String/Array/Matrix",
    "description": "Given two version numbers, version1 and version2, compare them.",
    "assumptions": [],
    "example": {}
  },
  "solutions": [
    {
      "title": "Solution 1 â€“ String Parsing",
      "description": "Parse version numbers and compare.",
      "code": "public int compareVersion(String version1, String version2) {\n    String[] v1 = version1.split(\"\\.\");\n    String[] v2 = version2.split(\"\\.\");\n    \n    int maxLength = Math.max(v1.length, v2.length);\n    \n    for (int i = 0; i < maxLength; i++) {\n        int num1 = i < v1.length ? Integer.parseInt(v1[i]) : 0;\n        int num2 = i < v2.length ? Integer.parseInt(v2[i]) : 0;\n        \n        if (num1 < num2) return -1;\n        if (num1 > num2) return 1;\n    }\n    \n    return 0;\n}",
      "language": "java",
      "complexity": {
        "time": "O(n)",
        "space": "O(n)"
      }
    }
  ],
  "variations": [],
  "navigation": {
    "previous": "two-sum.html",
    "next": "two-sum-iii.html"
  }
}