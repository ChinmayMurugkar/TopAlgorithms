{
  "problem": {
    "title": "Integer to English Words",
    "leetcode_id": null,
    "category": "String/Array/Matrix",
    "description": "Convert a non-negative integer num to its English words representation.",
    "assumptions": [],
    "example": {}
  },
  "solutions": [
    {
      "title": "Solution 1 â€“ Recursive",
      "description": "Convert number to English words recursively.",
      "code": "public String numberToWords(int num) {\n    if (num == 0) return \"Zero\";\n    \n    String[] units = {\"\", \"Thousand\", \"Million\", \"Billion\"};\n    String result = \"\";\n    int i = 0;\n    \n    while (num > 0) {\n        if (num % 1000 != 0) {\n            result = convertLessThanOneThousand(num % 1000) + units[i] + \" \" + result;\n        }\n        num /= 1000;\n        i++;\n    }\n    \n    return result.trim();\n}\n\nprivate String convertLessThanOneThousand(int num) {\n    String[] ones = {\"\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"};\n    String[] teens = {\"Ten\", \"Eleven\", \"Twelve\", \"Thirteen\", \"Fourteen\", \"Fifteen\", \"Sixteen\", \"Seventeen\", \"Eighteen\", \"Nineteen\"};\n    String[] tens = {\"\", \"\", \"Twenty\", \"Thirty\", \"Forty\", \"Fifty\", \"Sixty\", \"Seventy\", \"Eighty\", \"Ninety\"};\n    \n    if (num == 0) return \"\";\n    if (num < 10) return ones[num] + \" \";\n    if (num < 20) return teens[num - 10] + \" \";\n    if (num < 100) return tens[num / 10] + \" \" + convertLessThanOneThousand(num % 10);\n    return ones[num / 100] + \" Hundred \" + convertLessThanOneThousand(num % 100);\n}",
      "language": "java",
      "complexity": {
        "time": "O(log n)",
        "space": "O(1)"
      }
    }
  ],
  "variations": [],
  "navigation": {
    "previous": "two-sum.html",
    "next": "two-sum-iii.html"
  }
}