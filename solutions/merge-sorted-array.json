{
  "problem": {
    "title": "Merge Sorted Array",
    "leetcode_id": null,
    "category": "String/Array/Matrix",
    "description": "You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.",
    "assumptions": [],
    "example": {}
  },
  "solutions": [
    {
      "title": "Solution 1 â€“ Two Pointers from End",
      "description": "Use two pointers starting from the end of both arrays.",
      "code": "public void merge(int[] nums1, int m, int[] nums2, int n) {\n    int p1 = m - 1, p2 = n - 1, p = m + n - 1;\n    \n    while (p1 >= 0 && p2 >= 0) {\n        if (nums1[p1] > nums2[p2]) {\n            nums1[p--] = nums1[p1--];\n        } else {\n            nums1[p--] = nums2[p2--];\n        }\n    }\n    \n    // Copy remaining elements from nums2\n    while (p2 >= 0) {\n        nums1[p--] = nums2[p2--];\n    }\n}",
      "language": "java",
      "complexity": {
        "time": "O(m + n)",
        "space": "O(1)"
      }
    }
  ],
  "variations": [],
  "navigation": {
    "previous": "two-sum.html",
    "next": "two-sum-iii.html"
  }
}