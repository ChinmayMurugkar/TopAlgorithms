{
  "problem": {
    "title": "Longest Common Prefix",
    "leetcode_id": null,
    "category": "String/Array/Matrix",
    "description": "Write a function to find the longest common prefix string amongst an array of strings.",
    "assumptions": [],
    "example": {}
  },
  "solutions": [
    {
      "title": "Solution 1 – Horizontal Scanning",
      "description": "Compare strings horizontally to find common prefix.",
      "code": "public String longestCommonPrefix(String[] strs) {\n    if (strs == null || strs.length == 0) return \"\";\n    \n    String prefix = strs[0];\n    \n    for (int i = 1; i < strs.length; i++) {\n        while (strs[i].indexOf(prefix) != 0) {\n            prefix = prefix.substring(0, prefix.length() - 1);\n            if (prefix.isEmpty()) return \"\";\n        }\n    }\n    \n    return prefix;\n}",
      "language": "java",
      "complexity": {
        "time": "O(S)",
        "space": "O(1)"
      }
    },
    {
      "title": "Solution 1 – Horizontal Scanning",
      "description": "Compare strings horizontally to find common prefix.",
      "code": "public String longestCommonPrefix(String[] strs) {\n    if (strs == null || strs.length == 0) return \"\";\n    \n    String prefix = strs[0];\n    \n    for (int i = 1; i < strs.length; i++) {\n        while (strs[i].indexOf(prefix) != 0) {\n            prefix = prefix.substring(0, prefix.length() - 1);\n            if (prefix.isEmpty()) return \"\";\n        }\n    }\n    \n    return prefix;\n}",
      "language": "java",
      "complexity": {
        "time": "O(S)",
        "space": "O(1)"
      }
    }
  ],
  "variations": [],
  "navigation": {}
}